import {QueryResult} from 'dialogflow'
import {runDialogflow} from 'runDialogflow'

import {db, Item} from 'db'
import {getDeeplink} from 'getDeeplink'

interface ChatMessage {
  text: string
}

export interface BotContext {
  sender: string
  reply: (response: string | object) => Promise<void>
  dialogflow?: QueryResult
}

const match = (regex: RegExp, text: string) => {
  const m = regex.exec(text)
  if (!m) return false

  return m[1]
}

const howMuchItemRegex = /([‡∏Å-‡πô]+)‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó/

function getItemName(text: string) {
  const item = match(howMuchItemRegex, text)
  if (!item) return '‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ'

  const priceRegex = /‡∏£‡∏≤‡∏Ñ‡∏≤/g

  return item.replace(priceRegex, '')
}

export async function Bot(message: ChatMessage, ctx: BotContext): Promise<string | object> {
  const {text} = message

  if (text.includes('/prayuth')) {
    return 'https://howlonguntilprayuthleaves.com'
  }

  if (text.includes('/pay')) {
    const deeplink = await getDeeplink(9000)
    console.log('Deep Link =', deeplink)

    return 'https://pay.scb/phoomparin/9000'
  }

  const dialogflow = await runDialogflow(text)

  if (dialogflow) {
    const {fulfillmentText, parameters} = dialogflow
    const {fields} = parameters

    if (fields.ProductNames) {
      const {stringValue: productName} = fields.ProductNames

      if (Math.random() > 0.7) {
        return `${productName}‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞`
      }
    }

    if (fulfillmentText) return fulfillmentText
  }

  if (text.includes('‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó')) {
    const name = getItemName(text)
    const price = Math.floor(Math.random() * 1000)
    const item: Item = {name, price}

    db.get('cart.' + ctx.sender).push(item).write()

    return `${name}‡∏£‡∏≤‡∏Ñ‡∏≤ ${price} ‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö ü¶Ñ`
  }

  if (text.includes('‡∏à‡πà‡∏≤‡∏¢')) {
    const items: Item[] = db.get('cart.' + ctx.sender).value()
    if (items.length < 1) {
      return `‡πÄ‡∏≠‡πä‡∏∞ ‡∏à‡∏∞‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏∞‡πÑ‡∏£‡∏ô‡∏∞ ‡∏Ç‡∏≠‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡∏°‡∏±‡πâ‡∏¢‡∏≠‡πà‡∏≤ ü¶Ñ`
    }

    const {name, price} = items[0]

    return `‡∏ã‡∏∑‡πâ‡∏≠${name} ‡∏£‡∏≤‡∏Ñ‡∏≤ ${price} ‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏•‡∏¥‡πâ‡∏á‡∏Ñ‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏ö‡∏¢: pay.scb/phoomparin/${price}`
  }

  return `ü¶Ñ ‡∏Ñ‡∏∏‡∏ì‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏≤‡∏ß‡πà‡∏≤: ${text} ‡πÉ‡∏ä‡πà‡∏°‡∏±‡πâ‡∏¢?`
}