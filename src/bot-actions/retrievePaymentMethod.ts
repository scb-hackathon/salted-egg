import {BotContext, BotResponse} from 'bot'
import {retrieveCartInfo} from 'bot-actions/payment'
import {handleCartEmpty} from 'bot-actions/handleCartEmpty'
import {payByQRCode} from 'bot-actions/payByQRCode'
import {requestToPay} from 'bot-actions/requestToPay'
import {debug} from 'utils/logs'

const {BASE_URL, BILLER_ID} = process.env

export async function retrievePaymentMethod(ctx: BotContext, text?: string): Promise<BotResponse> {
  const {state, setState, sender, reply} = ctx
  setState({asking: 'PAYMENT_METHOD'})

  const exit = () => setState({asking: false})

  const cartInfo = retrieveCartInfo(sender)
  if (!cartInfo) {
    exit()

    return handleCartEmpty(ctx)
  }

  const {totalPrice} = cartInfo

  if (text) {
    if (/‡πÅ‡∏≠‡∏û|SCB Easy|SCB App/i.test(text)) {
      const res = await requestToPay(totalPrice, sender)
      await reply(res)
    } else if (/QR|‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤|Code/i.test(text)) {
      const res = await payByQRCode(String(totalPrice), sender)
      await reply(res)
    } else if (/‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô|friend|best|web|link/i.test(text)) {
      debug(`> Biller ID = ${BILLER_ID}`)

      const url = `${BASE_URL}/pay/${BILLER_ID}/${totalPrice}`

      await reply(`‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞: ${url} üåç`)
    } else {
      return retrievePaymentMethod(ctx)
    }

    setState({awaitingPayment: true})

    return {
      text: '‡∏ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏∞‡πÑ‡∏£‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üôè',
      quick_replies: [{
        content_type: 'text',
        title: '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡πà‡∏≤‡∏¢ üíµ',
        payload: 'CHANGE_PAYMENT_METHOD'
      }, {
        content_type: 'text',
        title: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‚ùå',
        payload: 'CANCEL_ORDER'
      }]
    }
  }

  return {
    text: '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÑ‡∏´‡∏ô‡∏Ñ‡∏∞? üíµ',
    quick_replies: [{
      content_type: 'text',
      title: '‡πÅ‡∏≠‡∏û SCB üì±',
      payload: 'PAY_BY_SCB_APP',
    }, {
      content_type: 'text',
      title: 'QR Code üì∑',
      payload: 'PAY_BY_QR_CODE',
    }, {
      content_type: 'text',
      title: '‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏à‡πà‡∏≤‡∏¢ üë´',
      payload: 'PAY_BY_SCB_BEST',
    }],
  }
}